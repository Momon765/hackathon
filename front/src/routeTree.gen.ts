/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as HistoryRouteImport } from './routes/history/route'
import { Route as EventsRouteImport } from './routes/events/route'

// Create Virtual Routes

const HogeLazyImport = createFileRoute('/hoge')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const HogeLazyRoute = HogeLazyImport.update({
  path: '/hoge',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/hoge.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const HistoryRouteRoute = HistoryRouteImport.update({
  path: '/history',
  getParentRoute: () => rootRoute,
} as any)

const EventsRouteRoute = EventsRouteImport.update({
  path: '/events',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/events': {
      id: '/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsRouteImport
      parentRoute: typeof rootRoute
    }
    '/history': {
      id: '/history'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof HistoryRouteImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/hoge': {
      id: '/hoge'
      path: '/hoge'
      fullPath: '/hoge'
      preLoaderRoute: typeof HogeLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  EventsRouteRoute,
  HistoryRouteRoute,
  AboutLazyRoute,
  HogeLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/events",
        "/history",
        "/about",
        "/hoge"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/events": {
      "filePath": "events/route.tsx"
    },
    "/history": {
      "filePath": "history/route.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/hoge": {
      "filePath": "hoge.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
