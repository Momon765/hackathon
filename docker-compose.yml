x-app: &app
  build:
    context: .dockerdev
    dockerfile: Dockerfile
    args:
      RUBY_VERSION: "3.3.0"
      PG_MAJOR: "14"
      NODE_MAJOR: "20"
      BUNDLER_VERSION: "2.5.6"
      YARN_VERSION: "1.22.19"
  environment: &env
    NODE_ENV: ${NODE_ENV:-development}
    RAILS_ENV: ${RAILS_ENV:-development}
    YARN_CACHE_FOLDER: /app/node_modules/.yarn-cache
  image: rails-sample-2024:1.0.0
  tmpfs:
    - /tmp
    - /app/tmp/pids

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - .:/app:cached
    # or for selinux: https://docs.docker.com/storage/bind-mounts/#configure-the-selinux-label
    # - .:/app:cached,z
    - rails_cache:/app/tmp/cache
    - bundle:/usr/local/bundle
    - node_modules:/app/node_modules
    - .dockerdev/.psqlrc:/root/.psqlrc:ro
    - .dockerdev/.bashrc:/root/.bashrc:ro
  environment:
    <<: *env
    REDIS_URL: redis://redis:6379/
    DATABASE_URL: postgres://postgres:postgres@postgres:5432
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
    WEB_CONCURRENCY: 0
    HISTFILE: /app/log/.bash_history
    PSQL_HISTFILE: /app/log/.psql_history
    EDITOR: vi
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  runner:
    <<: *backend
    depends_on:
      - postgres
    ports:
      - "3000:3000"
    command:
      - /bin/sh
      - -c
      - |
        rm -f tmp/pids/server.pid &&
        bundle install &&
        bundle exec rails s -p 3000 -b 0.0.0.0

  sidekiq:
    <<: *backend
    depends_on:
      - postgres
      - redis
    command: bundle exec sidekiq -C config/sidekiq.yml
#    command: which sidekiq >/dev/null 2>&1 && bundle exec sidekiq -C config/sidekiq.yml

  postgres:
    image: postgres:14.0
    volumes:
      - .dockerdev/.psqlrc:/root/.psqlrc:ro
      - postgres:/var/lib/postgresql/data
      - ./log:/root/log:cached
    environment:
      PSQL_HISTFILE: /root/log/.psql_history
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  redis:
    image: redis:7.0-alpine
    volumes:
      - redis:/data
    ports:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30

  https-portal:
    image: steveltn/https-portal:1
    ports:
      - '80:80'
      - '443:443'
    links:
      - runner
    restart: always
    environment:
      DOMAINS: 'devsite.local -> http://runner:3000'
      STAGE: 'local'
    volumes:
      - ./https-portal:/var/lib/https-portal

volumes:
  postgres:
  redis:
  bundle:
  node_modules:
  rails_cache:
